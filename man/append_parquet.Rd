% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append-parquet.R
\name{append_parquet}
\alias{append_parquet}
\title{Append a data frame to a Parquet file}
\usage{
append_parquet(
  x,
  file,
  mode = c("auto", "merge_last_page", "new_pages", "new_row_groups"),
  compression = c("auto", "same", "snappy", "gzip", "zstd", "uncompressed"),
  encoding = NULL,
  metadata = NULL,
  row_groups = NULL,
  options = parquet_options()
)
}
\arguments{
\item{x}{Data frame to write.}

\item{file}{Path to the output file.}

\item{mode}{How the merging should be performed. Possible values are:
\itemize{
\item \code{auto}: the mode is selected automatically based on the sizes of
the existing row groups, pages, and the appended data frame.
\item \code{merge_last_page}: merge the first row group of the data frame to
the last page of the Parquet file.
\item \code{new_pages}: add the first row group of the data frame as new pages
to the last row group of the Parquet file.
\item \code{new_row_groups}: add new row groups.
}}

\item{compression}{Compression algorithm to use for the new data.
This also applies to the merged pages, if any. Possible values are
as for \code{\link[=write_parquet]{write_parquet()}}, plus two new values:
\itemize{
\item \code{auto}: choose automatically. Tries to choose the same algorithm
that is used in the file. If that algorithm is not supported, it will
use a different one.
\item \code{same}: Use the same algorithm as in the file. If the file uses
multiple algorithms, the first supported one is selected. If none of
them are supported, it throws an error.
}}

\item{encoding}{Encoding to use. Possible values:
\itemize{
\item If \code{NULL}, the appropriate encoding is selected automatically:
\code{RLE} or \code{PLAIN} for \code{BOOLEAN} columns, \code{RLE_DICTIONARY} for other
columns with many repeated values, and \code{PLAIN} otherwise.
\item If It is a single (unnamed) character string, then it'll be used
for all columns.
\item If it is an unnamed character vector of encoding names of the same
length as the number of columns in the data frame, then those
encodings will be used for each column.
\item If it is a named character vector, then the named must be unique
and each name must match a column name, to specify the encoding of
that column. The special empty name (\code{""}) applies to the rest of
the columns. If there is no empty name, the rest of the columns
will use the default encoding.
}

If \code{NA_character_} is specified for a column, the default encoding is
used for the column.

If a specified encoding is invalid for a certain column type,
or nanoparquet does not implement it, \code{write_parquet()} throws an
error.

This version of nanoparquet supports the following encodings:
\code{PLAIN}, \code{GROUP_VAR_INT}, \code{PLAIN_DICTIONARY}, \code{RLE}, \code{BIT_PACKED}, \code{DELTA_BINARY_PACKED}, \code{DELTA_LENGTH_BYTE_ARRAY}, \code{DELTA_BYTE_ARRAY}, \code{RLE_DICTIONARY}, \code{BYTE_STREAM_SPLIT}.

See \link{parquet-encodings} for more about encodings.}

\item{metadata}{Additional key-value metadata to add to the file.
This must be a named character vector, or a data frame with columns
character columns called \code{key} and \code{value}.}

\item{row_groups}{Row groups of the Parquet file. If \code{NULL}, then the
\code{num_rows_per_row_group} option is used from the \code{options} argument,
see \code{\link[=parquet_options]{parquet_options()}}. Otherwise it must be an integer vector,
specifying the starts of the row groups.}

\item{options}{Nanoparquet options, see \code{\link[=parquet_options]{parquet_options()}}.}
}
\description{
TODO
}
